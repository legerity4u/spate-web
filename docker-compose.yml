version: "3.8"
services:
  nginx-front:
    image: nginx:latest
    networks:
      net: 
        ipv4_address: 172.18.1.2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-front.conf:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt #for the validation challenges
      - ./data/certbot/www:/var/www/certbot #for the actual certificates
      - ./code-front:/code
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  nginx-back:
    image: nginx:latest
    networks:
      net: 
        ipv4_address: 172.18.1.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt #for the validation challenges
      - ./data/certbot/www:/var/www/certbot #for the actual certificates
      - ./code-back:/code
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot:latest
    networks:
      net: 
        ipv4_address: 172.18.1.5
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  php-back:
    image: php:7.4.12-fpm
    networks:
      net: 
        ipv4_address: 172.18.1.4
    volumes:
      - ./code-back:/code
networks: 
  net:
    driver: bridge
    ipam: 
      config: 
        - subnet: 172.18.1.0/24